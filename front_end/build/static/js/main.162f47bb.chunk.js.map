{"version":3,"sources":["components/nav_bar/NavBar.jsx","components/main_page/MainPage.jsx","components/places_autocomplete/PlacesAutocomplete.jsx","components/create_group/CreateGroup.jsx","components/join_group/JoinGroup.jsx","components/split_bill_page/SplitBillPage.js","App.js","index.js"],"names":["NavBar","props","useState","page","setPage","useEffect","to","Navbar","bg","variant","Brand","onClick","Nav","className","Button","MainPage","Component","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","GoogleMaps","classes","React","value","setValue","inputValue","setInputValue","options","setOptions","loaded","useRef","autocompleteService","api_key","process","REACT_APP_API_KEY","window","current","document","querySelector","src","position","id","script","createElement","setAttribute","appendChild","loadScript","fetch","useMemo","throttle","request","callback","getPlacePredictions","active","google","maps","places","AutocompleteService","input","types","results","newOptions","Autocomplete","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","handleParentFunc","onInputChange","newInputValue","renderInput","params","TextField","label","fullWidth","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","map","match","offset","length","Grid","container","alignItems","item","xs","part","index","key","style","fontWeight","highlight","Typography","secondary_text","CreateGroup","handleChange","setState","target","name","handleImage","image","URL","createObjectURL","files","imageblob","Blob","file","preview","onImageLoaded","imageRef","newFile","onCropComplete","crop","makeClientCrop","onCropChange","handleUsers","type","input_users","exists","state","user_name","alert","handleSubmit","a","preventDefault","data","FormData","append","method","body","response","status","json","result","image_s3url","message","console","log","error","input_address","input_location","input_city","input_state","input_zip_code","input_tip","headers","JSON","stringify","group_url","link","redirect","split","unit","width","height","croppedImageUrl","inputFileRef","createRef","this","getCroppedImg","fileName","canvas","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","y","Promise","resolve","reject","toBlob","blob","revokeObjectURL","fileUrl","onSubmit","initialValues","handleBlur","Form","Group","controlId","Label","multiple","freeSolo","required","FormControl","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","Control","Feedback","accept","ref","ruleOfThirds","onComplete","JoinGroup","session_link","start","search","substring","submit_link","Input","FormHelperText","QRCode","require","ColoredLine","backgroundColor","margin","SplitBillPage","fetchGroupData","items","sort","b","item_name","city","image_url","item_assignments","user_assignments","location_name","state_name","street_address","sub_total","tax_rate","tip_rate","total_adjustment","total_cost","users","user_count","zip_code","address","handleAssign","s_name","removed","filter","includes","socket","emit","handleItemEdit","old_value","cost","new_item_name","item_modal","new_item_cost","handleUserEdit","adjustment","new_nickname","user_modal","new_adjusted_amount","handleOpen","obj","handleClose","handleDeleteItem","handleDeleteUser","new_user_name","handleAddUser","add_user_name","add_user_adjusted_amount","add_user","handleAddItem","add_item_name","add_item_cost","add_item","handleTip","tip","new_tip_rate","parseFloat","edit_tip","show_image","copyCodeToClipboard","textArea","select","execCommand","copySuccess","handleReupload","values","handleImagePreview","undefined","componentDidMount","io","connect","reconnection","transports","on","componentWillUnmount","groupURL","url","full_url","location","href","textarea","defaultValue","Paper","paper","Modal","aria-labelledby","aria-describedby","modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper_modal","placeholder","step","item_button","size","display","item_cost","disableClearable","disableCloseOnSelect","user","user_nickname","user_adjusted_amount","toFixed","index2","user_amount_owed","alt","withStyles","root","flexGrow","padding","justifyContent","background","border","boxShadow","shadows","withTheme","App","MainPageComponent","exact","path","render","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.162f47bb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nconst NavBar = (props) => {\n  const [page, setPage] = useState(\"\");\n\n  useEffect(() => {\n    setPage(\"\");\n  }, [page]);\n\n  if (page === \"main\") {\n    return <Redirect to=\"/\" />;\n  } else if (page === \"create\") {\n    return <Redirect to=\"/create_group\" />;\n  } else if (page === \"join\") {\n    return <Redirect to=\"/join_group\" />;\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand onClick={() => setPage(\"main\")}>Blitz</Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <Button\n            className=\"button\"\n            variant=\"dark\"\n            onClick={() => setPage(\"main\")}\n          >\n            {\" \"}Home{\" \"}\n          </Button>\n          <Button variant=\"dark\" onClick={() => setPage(\"create\")}>\n            {\" \"}Create{\" \"}\n          </Button>\n          <Button variant=\"dark\" onClick={() => setPage(\"join\")}>\n            {\" \"}Join{\" \"}\n          </Button>\n          {/* <Nav.Link href=\"#home\">Home</Nav.Link> */}\n          {/* <Nav.Link href=\"#create-group\">Create Group</Nav.Link> */}\n          {/* <Nav.Link href=\"#join-group\">Join Group</Nav.Link> */}\n        </Nav>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport NavBar from '../nav_bar/NavBar'\nimport './MainPage.css'\n\nclass MainPage extends Component{\n  render(){\n    return(\n      <div>\n        <NavBar/>\n        <div className=\"text\">\n          <h1>What do we do?</h1>\n          <p>We help people split the bill.</p>\n          <h2>How it works:</h2>\n          <ol>\n            <li>Create a group</li>{\" \"}\n            <li>Enter Parameters (enter number of people)</li>{\" \"}\n            <li>Upload the receipt and share your group's link</li>{\" \"}\n            <li>Each individual selects their purchase(s)</li> <li>That's it</li>{\" \"}\n          </ol>{\" \"}\n        </div>\n      </div>\n    )   \n  }\n  \n}\n\nexport default MainPage;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function GoogleMaps(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n  const autocompleteService = React.useRef();\n  const api_key = process.env.REACT_APP_API_KEY;\n\n\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(\n        'https://maps.googleapis.com/maps/api/js?key=' + api_key + '&libraries=places',\n        document.querySelector('head'),\n        'google-maps',\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    [autocompleteService],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue, types: [\"address\"] }, (results) => {\n      if (active) {\n        let newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch, props]);\n\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n        props.handleParentFunc(newValue.description);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Add a location\" variant=\"filled\" fullWidth />\n      )}\n      renderOption={(option) => {\n        const matches = option.structured_formatting.main_text_matched_substrings;\n        const parts = parse(\n          option.structured_formatting.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length]),\n        );\n\n        return ( \n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {parts.map((part, index) => (\n                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                  {part.text}\n                </span>\n              ))}\n\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {option.structured_formatting.secondary_text}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n}","import React, { Component } from 'react';\nimport NavBar from '../nav_bar/NavBar';\nimport './CreateGroup.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Formik } from 'formik';\nimport PlacesAutocomplete from '../places_autocomplete/PlacesAutocomplete';\n// import Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nclass CreateGroup extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      file: null,\n      preview: \"\",\n      newFile: \"\",\n      input_users: [],\n      input_address: \"\",\n      input_zip_code: \"\",\n      input_city: \"\",\n      input_state: \"\",\n      input_tip: 0,\n      input_location: \"\",\n      redirect: false,\n      group_url: \"\",\n      image_s3url: \"\",\n      crop: {\n        unit: '%',\n        width: 100,\n        height: 100,\n      },\n      croppedImageUrl: \"\"\n    }\n    this.inputFileRef = React.createRef();\n  }\n\n  // Handle the form here\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleImage = (event) => {\n    let image = URL.createObjectURL(event.target.files[0]) // for preview\n    const imageblob = new Blob([event.target.files[0]]) // to store\n    this.setState({\n      file: imageblob,\n      preview: image\n    })\n  }\n\n  onImageLoaded = image => {\n    this.imageRef = image;\n    this.setState({\n      newFile: this.imageRef\n    })\n  };\n\n  onCropComplete = crop => {\n    this.makeClientCrop(crop);\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(\n        this.imageRef,\n        crop,\n        'newFile.jpeg'\n      );\n      this.setState({ croppedImageUrl: croppedImageUrl });\n    }\n  }\n\n  getCroppedImg(image, crop, fileName) {\n    console.log(\"Creating Crop\");\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error('Canvas is empty');\n          return;\n        }\n        window.URL.revokeObjectURL(this.fileUrl);\n        this.fileUrl = window.URL.createObjectURL(blob);\n        resolve(this.fileUrl);\n        this.setState({\n          newFile: blob\n        })\n      });\n    });\n  }\n\n  handleUsers = (event, value, type) => {\n    if (type === \"remove-option\") {\n      this.setState({\n        input_users: value\n      })\n    } else if (type === \"create-option\") {\n      let exists = false;\n      this.state.input_users.map((user_name) => {\n        if(user_name === event.target.value) {\n          exists = true;\n          return (alert(\"Duplicate User Cannot Exist\"));\n        } \n        return null;\n      })\n      if(exists) {\n        return;\n      }\n      this.setState({\n        input_users: [...this.state.input_users, event.target.value]\n      })\n    } else {\n      return;\n    }\n  }\n\n  // call the api endpoint here\n  // put upload image here if it exists, call upload image api\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    // First need to upload the image if it exists\n    if(this.state.preview !== \"\") { // check if preview empty rather then blob data\n      // call uploadimage api to get object url\n      let data = new FormData();\n      data.append('file', this.state.newFile)\n\n      const response = await fetch('/api/upload_image', {\n        method: 'POST',\n        body: data\n      })\n      const status = response.status\n      const result = await response.json();\n\n      if(status === 200) {\n        this.setState({\n          image_s3url: result.message\n        })\n      } else {\n        console.log(result.error)\n        return;\n      }\n    }\n    \n    // Now upload rest of data\n    let data = {\n      \"users\": this.state.input_users,\n      \"street_address\": this.state.input_address,\n      \"location_name\": this.state.input_location,\n      \"city\": this.state.input_city, \n      \"state\": this.state.input_state,\n      \"zip_code\": this.state.input_zip_code,\n      \"image_s3url\": this.state.image_s3url,\n      \"tip_rate\": this.state.input_tip\n    }\n\n    try {\n      const response = await fetch(\"/api/create_group\", {\n        headers: {\n          \"Content-Type\": 'application/json',\n          \"Accept\": 'application/json',\n        },\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n\n      const status = response.status;\n      const result = await response.json();\n\n      if(status === 200) {\n        this.setState({\n          group_url: result.link,\n          redirect: true\n        })\n      } else {\n        alert(result.error);\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //Handles Google API address field\n  handleParentFunc = (value) =>{\n    if (value) {\n      const [input_address, input_city, input_state, input_zip_code] = value.split(',');\n      if (input_address && input_city && input_state && input_zip_code) {\n        this.setState({\n          input_address,\n          input_zip_code,\n          input_city,\n          input_state,\n        });\n      }\n    }\n  }\n\n  render () {\n    if(this.state.redirect) {\n      return <Redirect to={this.state.group_url}/>\n    }\n    return(\n      <Formik\n        onSubmit={this.handleSubmit}\n        initialValues={{\n          input_users: '',\n          input_address: '',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n        }) => (\n        <div>\n          <NavBar/>\n          <div className=\"text\">\n            <div>Creating Your Group</div>\n            <br></br>\n            <Form className=\"form\" onSubmit={this.handleSubmit}>\n              \n              <Form.Group controlId=\"form.input_users\">\n                <Form.Label>\n                  Input name(s):\n                </Form.Label>\n              <Autocomplete\n              multiple\n              id=\"input_users\"\n              options={[]}\n              freeSolo\n              required = \"Please enter at least one user\"\n              onChange = {this.handleUsers}\n              value={this.state.input_users}\n              renderInput={(params) => (\n                <TextField {...params} variant=\"filled\" label=\"User(s)\" />\n              )}\n              \n            />\n              </Form.Group>\n              \n              <Form.Group className=\"form-group\" controlId=\"form.input_location\">\n                <Form.Label>\n                  Input location:\n                </Form.Label>\n              {/* <Form.Control \n                placeholder=\"Location Name\"\n                name=\"input_location\"\n                onChange={this.handleChange}\n                value={this.state.input_location}\n                isValid={touched.input_location && !errors.input_location}\n                required = \"Please enter your location\"\n              />  */}\n                <br></br>\n                <TextField\n                  fullWidth\n                  required\n                  label=\"Establishment\"\n                  name=\"input_location\"\n                  onChange={this.handleChange}\n                  value={this.state.input_location}\n                  // helperText=\"Ex: name of restaurant\"\n                  variant=\"filled\"\n                />\n              </Form.Group>\n              \n              <Form.Group controlId=\"form.input_address\">\n                <Form.Label>Address:</Form.Label>\n                 {/* <Form.Control\n                  type=\"text\"\n                  placeholder=\"Address\"\n                  name=\"input_address\"\n                  onChange={handleChange}\n                  value={values.input_address}\n                  as=\"textarea\" rows=\"1\" \n                  required\n                />  */}\n                <PlacesAutocomplete\n                  // onChange={(event, value) => {\n                  //   this.handleParentFunc(value);\n                  // }}\n                  handleParentFunc={(value)=> {\n                    // console.log(\"your value --> \", value);\n                    // this.setState({\n                    //   input_address: value\n                    // })\n                    this.handleParentFunc(value);\n                    }\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group className=\"form-group\" controlId=\"form.select_state\">\n                {/* <Form.Label>State(optional):</Form.Label> */}\n                {/* <Form.Control\n                  name=\"select_state\"\n                  onChange={this.handleChange}\n                  onBlur={handleBlur}\n                  value={this.state.select_state}\n                  as=\"select\">\n                  <option value=\"\">Select a state</option>\n                  <option value=\"Alabama\">Alabama</option>\n                  <option value=\"Alaska\">Alaska</option>\n                  <option value=\"Arizona\">Arizona</option>\n                  <option value=\"Arkansas\">Arkansas</option>\n                  <option value=\"California\">California</option>\n                  <option value=\"Colorado\">Colorado</option>\n                  <option value=\"Connecticut\">Connecticut</option>\n                  <option value=\"Delaware\">Delaware</option>\n                  <option value=\"Florida\">Florida</option>\n                  <option value=\"Georgia\">Georgia</option>\n                  <option value=\"Hawaii\">Hawaii</option>\n                  <option value=\"Idaho\">Idaho</option>\n                  <option value=\"Illinois\">Illinois</option>\n                  <option value=\"Indiana\">Indiana</option>\n                  <option value=\"Iowa\">Iowa</option>\n                  <option value=\"Kansas\">Kansas</option>\n                  <option value=\"Kentucky\">Kentucky</option>\n                  <option value=\"Louisiana\">Louisiana</option>\n                  <option value=\"Maine\">Maine</option>\n                  <option value=\"Maryland\">Maryland</option>\n                  <option value=\"Massachusetts\">Massachusetts</option>\n                  <option value=\"Michigan\">Michigan</option>\n                  <option value=\"Minnesota\">Minnesota</option>\n                  <option value=\"Mississippi\">Mississippi</option>\n                  <option value=\"Missouri\">Missouri</option>\n                  <option value=\"Montana\">Montana</option>\n                  <option value=\"Nebraska\">Nebraska</option>\n                  <option value=\"Nevada\">Nevada</option>\n                  <option value=\"New Hampshire\">New Hampshire</option>\n                  <option value=\"New Jersey\">New Jersey</option>\n                  <option value=\"New Mexico\">New Mexico</option>\n                  <option value=\"New York\">New York</option>\n                  <option value=\"North Carolina\">North Carolina</option>\n                  <option value=\"North Dakota\">North Dakota</option>\n                  <option value=\"Ohio\">Ohio</option>\n                  <option value=\"Oklahoma\">Oklahoma</option>\n                  <option value=\"Oregon\">Oregon</option>\n                  <option value=\"Pennsylvania\">Pennsylvania</option>\n                  <option value=\"Rhode Island\">Rhode Island</option>\n                  <option value=\"South Carolina\">South Carolina</option>\n                  <option value=\"South Dakota\">South Dakota</option>\n                  <option value=\"Tennessee\">Tennessee</option>\n                  <option value=\"Texas\">Texas</option>\n                  <option value=\"Utah\">Utah</option>\n                  <option value=\"Vermont\">Vermont</option>\n                  <option value=\"Virginia\">Virginia</option>\n                  <option value=\"Washington\">Washington</option>\n                  <option value=\"West Virginia\">West Virginia</option>\n                  <option value=\"Wisconsin\">Wisconsin</option>\n                  <option value=\"Wyoming\">Wyoming</option>\n                </Form.Control> */}\n              </Form.Group>\n              \n              <Form.Group controlId=\"form.input_tip\">\n                <Form.Label>\n                  Input Tip here:\n                </Form.Label>\n              {/* <Form.Control \n                type=\"text\"\n                placeholder=\"Tip\"\n                name=\"input_tip\"\n                onChange={this.handleChange}\n                value={this.state.input_tip}\n                isValid={touched.input_tip && !errors.input_tip}\n                required = \"Please enter your tip\"\n              />  */}\n              <FormControl fullWidth variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\n                <FilledInput\n                  id=\"filled-adornment-amount\"\n                  name=\"input_tip\"\n                  // input type = {Number}\n                  value={this.state.input_tip}\n                  onChange={this.handleChange}\n                  endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\n                />\n              </FormControl>\n                <Form.Control.Feedback></Form.Control.Feedback>\n              </Form.Group>\n                <br></br>\n                <div>\n                  <input type=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" ref={this.inputFileRef} onChange={this.handleImage}/>\n                  <br></br>\n                  {/* <img style={{width: 225}} src={this.state.preview} alt={\"\"}/> */}\n                  {this.state.preview && (\n                    <ReactCrop\n                      src={this.state.preview}\n                      crop={this.state.crop}\n                      ruleOfThirds\n                      onImageLoaded={this.onImageLoaded}\n                      onComplete={this.onCropComplete}\n                      onChange={this.onCropChange}\n                    />\n                  )}\n                  {/* {this.state.croppedImageUrl && (\n                    <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={this.state.croppedImageUrl} />\n                  )} */}\n                </div>\n                <br></br>\n              <Button type=\"submit\"> Submit form </Button>\n            </Form>\n          </div>\n      </div>\n    )} \n    </Formik>  \n    )   \n  }\n}\n\nexport default CreateGroup;\n","import React, { Component } from \"react\";\nimport NavBar from \"../nav_bar/NavBar\";\nimport { Button } from \"reactstrap\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Input } from \"@material-ui/core\";\nimport \"./JoinGroup.css\";\nimport { Redirect } from \"react-router-dom\";\n\nclass JoinGroup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      session_link: \"\",\n      submit_link: \"\",\n    };\n  }\n\n  handleChange = (event) =>{\n    this.setState({\n      session_link: event.target.value\n    });\n  }\n\n  handleSubmit = () =>{\n    if(this.state.session_link.length === 0) {\n      return(alert(\"Please enter a link\"))\n    }\n    const start = this.state.session_link.search('/split_bill');\n\n    if(start === -1) {\n      return (alert(\"Please enter a valid link\"))\n    }\n    this.state.session_link.substring(start);\n\n    this.setState({\n      submit_link: this.state.session_link.substring(start, this.state.session_link.length),\n    })\n  }\n\n  render(){  \n    if(this.state.submit_link !== \"\") {\n      return <Redirect to={this.state.submit_link}/>\n    }\n    return (\n        <div>\n          <NavBar />\n          <div className=\"text\">\n              <label className=\"form\">\n                Enter your invite link:\n                <br></br>\n                <Input type=\"text\" value={this.state.session_link} onChange={this.handleChange}></Input>\n              </label>\n              <br></br>\n              {/* <input type=\"submit\" value=\"Submit\"/> */}\n              <Button type=\"submit\" onClick={this.handleSubmit}>Join</Button>\n              <FormHelperText id=\"my-helper-text\">This will redirect you to your session.</FormHelperText>\n          </div>\n        </div>\n    );\n  }\n};\n\nexport default JoinGroup;","import React, { Component } from 'react';\nimport NavBar from '../nav_bar/NavBar'\n// need to use withStyles to combine Material UI design with react compnents at end of file when exporting\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n// import { FormControl, Select, InputLabel, MenuItem} from '@material-ui/core';\nimport './SplitBill.css'\nimport { Redirect } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Form from 'react-bootstrap/Form';\nimport io from \"socket.io-client\";\n\nvar QRCode = require('qrcode.react');\n// import QRCode from \"qrcode.react\";\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      // textAlign: 'center',\n      color: theme.palette.text.secondary,\n      margin: '1%'\n    },\n    fullWidth: {\n      width: '100%',\n    },\n    item_button: {\n      margin: '0.1em'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper_modal: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n});\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 5,\n            margin: 5, \n        }}\n    />\n);\n\nclass SplitBillPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      group_url: props.groupURL.match.url,\n      full_url: window.location.href,\n      image_url: \"\",\n      item_assignments: {},\n      user_assignments: {},\n      items: [],\n      location_name: \"\",\n      state_name: \"\",\n      street_address: \"\",\n      sub_total: 0.0,\n      tax_rate: 0.0,\n      tip_rate: 0.0,\n      total_adjustment: 0,\n      total_cost: 0,\n      users: [],\n      zip_code: \"\",\n      redirect: false,\n      user_count: 0,\n      address: \"\",\n      user_modal: \"\",\n      new_user_name: \"\",\n      new_adjusted_amount: \"\",\n      item_modal: \"\",\n      new_item_name: \"\",\n      new_item_cost: \"\",\n      add_item: false,\n      add_item_name: \"\",\n      add_item_cost: \"0.0\",\n      add_user: false,\n      add_user_name: \"\",\n      add_user_adjusted_amount: \"0.0\",\n      new_tip_rate: \"\",\n      copySuccess: false,\n      show_image: false,\n      socket: \"\",\n      file: null,\n      preview: \"\",\n    }\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  // –––––––––––– Get Group Data –––––––––––––––––––––––\n  fetchGroupData = async () => {\n    // With get requests cant pass a body, so pass in URL parameter instead, should be URL encoded but in this case skipped as it currently works without it\n    try {\n      const response = await fetch(`/api/get_group/?group_URL=${this.state.group_url}`)\n      const status = response.status;\n      const result = await response.json();\n  \n      if(status === 200) {\n        result.items.sort(function(a, b) {\n          // console.log(a.item_name < b.item_name)\n          if(a.item_name < b.item_name) { return -1; }\n          if(a.item_name > b.item_name) { return 1; }\n          return 0;\n        });\n\n        this.setState({\n          city: result.city,\n          image_url: result.image_url,\n          item_assignments: result.item_assignments,\n          user_assignments: result.user_assignments,\n          items: result.items,\n          location_name: result.location_name,\n          state_name: result.state_name,\n          street_address: result.street_address,\n          sub_total: result.sub_total,\n          tax_rate: result.tax_rate,\n          tip_rate: result.tip_rate,\n          total_adjustment: result.total_adjustment,\n          total_cost: result.total_cost,\n          users: result.users,\n          user_count: result.user_count,\n          zip_code: result.zip_code,\n          address: result.street_address + ', ' + result.city + ', ' + result.state_name,\n        })\n      } else if (status >= 400) {\n          this.setState({\n            redirect: true\n          }, () => {alert(result.error)});\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // –––––––––––– Assign or Unassign Member ––––––––––––\n  handleAssign = async (event, value, type, s_name) => {\n    // assign an item to a user\n    let status = null;\n    let result = null;\n    if(type === 'create-option') {\n      const data = {\n        \"nickname\": value[value.length-1],\n        \"item_name\": event.target.name,\n        \"group_url\": this.state.group_url\n      };\n\n      const response = await fetch('/api/assign_item', {\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": 'application/json'\n        }, \n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n\n      status = response.status;\n      result = await response.json();\n    } else if (type === 'remove-option') { // unassign and item to a user\n      // get removed value by using difference between value and state\n      let removed = null;\n      if(!value) {\n        removed = this.state.item_assignments[event.target.name][0];\n      } else if (!event.target.name) {\n        return;\n      } else {\n        removed = this.state.item_assignments[event.target.name].filter(item => \n          !value.includes(item)\n        )\n      }\n      const data = {\n        \"nickname\": removed[0],\n        \"item_name\": event.target.name,\n        \"group_url\": this.state.group_url\n      };\n\n      const response = await fetch('/api/unassign_item', {\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": 'application/json'\n        }, \n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n\n      status = response.status;\n      result = await response.json();\n    } else {\n      return;\n    }\n    if (status === 200) {\n      // console.log(result.message);\n      // get data again\n      await this.fetchGroupData();\n      this.state.socket.emit('new_update', this.state.group_url);\n      // console.log(\"Data Updated\");\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Edit Item or Edit User –––––––––––––––\n  handleItemEdit = async (old_value) => {\n    // parse integer into float\n    let cost = \"0.0\";\n    if(this.state.new_item_name === this.state.item_modal && this.state.new_item_cost === old_value) {\n      return alert(\"Please enter some change to edit\");\n    } else if (this.state.new_item_name.length === 0) {\n      return alert(\"Name cannot be empty\");\n    } else if(this.state.new_item_cost.length !== 0) {\n      // cost = parseFloat(this.state.new_item_cost).toFixed(2);\n      cost = this.state.new_item_cost;\n    }\n    \n    const data = {\n      \"item_name\": this.state.item_modal,\n      \"new_item_name\": this.state.new_item_name, // if no new then can be empty or same as original\n      \"new_item_cost\": cost, \n      \"group_url\": this.state.group_url\n    }\n\n    const response = await fetch('/api/edit_item', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        item_modal: \"\",\n        new_item_name: \"\",\n        new_item_cost: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  handleUserEdit = async (old_value) => {\n    let adjustment = \"0.0\";\n    if(this.state.new_nickname === this.state.user_modal && this.state.new_adjusted_amount === old_value) {\n      return alert(\"Please enter something different to edit\");\n    } else if (this.state.new_nickname.length === 0) {\n      return alert(\"Username cannot be empty!\");\n    } else if (this.state.new_adjusted_amount !== 0) {\n      adjustment  = this.state.new_adjusted_amount;\n    }\n\n    const data = {\n      \"nickname\": this.state.user_modal,\n      \"new_nickname\": this.state.new_nickname,\n      \"adjusted_amount\": adjustment,\n      \"group_url\": this.state.group_url\n    };\n\n    const response = await fetch('/api/edit_user', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n\n    const status = response.status;\n    const result = await response.json();\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        user_modal: \"\",\n        new_nickname: \"\",\n        new_adjusted_amount: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Modal Opening and Closing ––––––––––––\n  handleOpen = (obj, name, cost) => {\n    if(obj === \"user_modal\") {\n      this.setState({\n        [obj]: name,\n        new_adjusted_amount: cost,\n        new_nickname: name\n      })\n    } else if(obj === \"item_modal\") {\n      this.setState({\n        [obj]: name,\n        new_item_cost: cost,\n        new_item_name: name\n      })\n    } else if(obj === \"add_item\" || obj ===\"add_user\"){\n      this.setState({\n        [obj]: true\n      })\n    } else if(obj === \"edit_tip\") {\n      this.setState({\n        [obj]: true,\n        new_tip_rate: this.state.tip_rate\n      })\n    }\n  }\n\n  handleClose = (obj) => {\n    if(obj === \"user_modal\") {\n      this.setState({\n        [obj]: \"\",\n        new_adjusted_amount: \"\",\n        new_user_name: \"\"\n      })\n    } else if (obj === \"item_modal\") {\n      this.setState({\n        [obj]: \"\",\n        new_item_cost: \"\",\n        new_item_name: \"\"\n      })\n    } else if (obj === \"add_item\" || obj === \"add_user\" || obj ===\"edit_tip\") {\n      this.setState({\n        [obj]: false\n      })\n    }\n  }\n  // –––––––––––– Delete Item or User ––––––––––––––––––\n  handleDeleteItem = async () => {\n    const data = {\n      \"item_name\": this.state.item_modal,\n      \"group_url\": this.state.group_url\n    }\n\n    const response = await fetch('/api/delete_item', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'DELETE',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        item_modal: \"\",\n        new_item_name: \"\",\n        new_item_cost: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  handleDeleteUser = async () => {\n    const data = {\n      \"nickname\": this.state.user_modal,\n      \"group_url\": this.state.group_url\n    };\n\n    const response = await fetch('/api/delete_user', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'DELETE',\n      body: JSON.stringify(data)\n    });\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200){\n      // console.log(result.message)\n      await this.fetchGroupData();\n      this.setState({\n        user_modal: \"\",\n        new_adjusted_amount: \"\",\n        new_user_name: \"\"\n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error)\n    }\n  }\n\n  // –––––––––––– Add User or Item –––––––––––––––––––––\n  handleAddUser = async () => {\n    if(this.state.add_user_name.length === 0) {\n      return alert(\"User must have name\");\n    } else if(this.state.add_user_adjusted_amount.length === 0) {\n      return alert(\"User must have some cost\");\n    }\n\n    const data = {\n      \"nickname\": this.state.add_user_name,\n      \"amount_adjusted\": this.state.add_user_adjusted_amount,\n      \"group_url\": this.state.group_url\n    }\n      \n    const response = await fetch('/api/create_user', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        add_user: false,\n        add_user_name: \"\",\n        add_user_adjusted_amount: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  handleAddItem = async () => {\n    if(this.state.add_item_name.length === 0) {\n      return alert(\"Item must have name\");\n    } else if(this.state.add_item_cost.length === 0) {\n      return alert(\"Item must have some cost\");\n    }\n\n    const data = {\n      \"item_name\": this.state.add_item_name,\n      \"item_cost\": this.state.add_item_cost,\n      \"group_url\": this.state.group_url\n    }\n      \n    const response = await fetch('/api/create_item', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        add_item: false,\n        add_item_name: \"\",\n        add_item_cost: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Edit Tip –––––––––––––––––––––––––––––\n  handleTip = async () => {\n    let tip = \"0.0\";\n    if (this.state.new_tip_rate.length > 0 && this.state.new_tip_rate[0] === '-') {\n      return alert(\"Tip cannot be negative\");\n    } else if(parseFloat(this.state.new_tip_rate) === this.state.tip_rate) {\n      return alert(\"Please enter a different tip rate\");\n    } else if (this.state.new_tip_rate.length !== 0) {\n      tip = parseFloat(this.state.new_tip_rate);\n    }\n\n    const data = {\n      \"tip_rate\": tip,\n      \"group_url\": this.state.group_url\n    };\n\n    const response = await fetch('/api/edit_tip_rate', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n\n    const status = response.status;\n    const result = await response.json();\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        edit_tip: false,\n        new_tip_rate: \"\",\n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Handle preview –––––––––––––––––––––––\n  handleImage = () => {\n    this.setState({\n      show_image: !this.state.show_image\n    })\n  }\n\n  // –––––––––––– Copy URL –––––––––––––––––––––––––––––\n  copyCodeToClipboard = () => {\n    const el = this.textArea\n    el.select()\n    document.execCommand(\"copy\")\n    this.setState({copySuccess: true})\n  }\n\n  // –––––––––––– Reupload –––––––––––––––––––––––––––––\n  handleReupload = async (event) => {\n    event.preventDefault(); // prevent form from refreshing page by iteslf\n    if((this.state.file === null) || (this.state.preview.length === 0)) {\n      return alert(\"Please Choose a New Image to Upload\");\n    }\n    let data = new FormData();\n    data.append('file', this.state.file);\n    for (var value of data.values()) {\n      console.log(value); \n    }\n\n    const response = await fetch(`/api/reupload_image/?group_URL=${this.state.group_url}`, {\n      method: 'POST',\n      body: data\n    })\n    const status = response.status\n    const result = await response.json();\n\n    if(status === 200) {\n      this.setState({\n        preview: \"\",\n        show_image: false\n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n      await this.fetchGroupData();\n      // window.location.reload(); // trigger entire page refresh can be solution for text displayed on screen\n    } else {\n      console.log(result.error)\n      console.log(\"This doesn't work\")\n      return;\n    }\n  }\n\n  handleImagePreview = (event) => {\n    if(event.target.files[0] === undefined) {\n      if(this.state.preview.length > 0) {\n        this.setState({\n          preview: \"\"\n        })\n      }\n      return;\n    }\n    let image = URL.createObjectURL(event.target.files[0]) // for preview\n    const imageblob = new Blob([event.target.files[0]]) // to store\n    this.setState({\n      file: imageblob,\n      preview: image,\n    })\n  }\n\n  componentDidMount = async () => {\n    await this.fetchGroupData();\n\n    const ENDPOINT = \"/socket\";\n    const socket = io.connect(ENDPOINT, {\n      reconnection: true,\n      transports: ['websocket'] // need to upgrade to websockets succesfully \n    })\n\n    this.setState({\n      socket: socket\n    })\n        \n    socket.emit('join', {\n      'room': this.state.group_url\n    })\n\n    socket.on('new_update', () => {\n      this.fetchGroupData();\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.state.socket.emit('leave', {\n      'room': this.state.group_url\n    })\n  }\n\n  render() {\n    // get access to the styling for our components to use\n    const classes = this.props.classes;\n    return (\n      <div>\n        <NavBar/>\n        {\n          this.state.redirect \n          ? \n          <Redirect to='/'/>\n          :\n          <div>\n            <br/>\n            <h4 style={{\"textAlign\": \"center\"}}> {this.state.location_name} </h4>\n            <p style={{\"textAlign\": \"center\"}}> {this.state.address} </p>\n            <div style={{\"textAlign\": \"center\"}}>\n              <textarea\n                style={{\"width\": \"250px\"}}\n                ref={(textarea) => this.textArea = textarea}\n                defaultValue={this.state.full_url}\n              />\n            </div>\n            <div style={{\"textAlign\": \"center\"}}>\n              <button onClick={() => this.copyCodeToClipboard()}>\n                Copy to Clipboard\n              </button>\n              {\n                this.state.copySuccess ?\n                <div style={{\"color\": \"green\"}}>\n                  Success!\n                </div> : null\n              }\n            </div>\n            <QRCode value={this.state.full_url}></QRCode>  \n            {/* Render item, item price, and user assignment that is modifyable\n            should open a model to update for UI friendliness */}\n            <Grid container spacing={3}>\n              {/* Currently displaying item name and cost */}\n              <Grid item xs>\n                <Paper className={classes.paper}>\n                <div className=\"items_flex_container\">\n                <div className=\"items_line\" > Items </div>\n                <Modal\n                  style={{\"align\": \"right\"}}\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={this.state.add_item}\n                  onClose={() => this.handleClose(\"add_item\")}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                  <Fade in={this.state.add_item}>\n                    <div className={classes.paper_modal}>\n                      <TextField id=\"outlined-basic\" label=\"Item Name\" variant=\"outlined\" name=\"add_item_name\" placeholder=\"name\" onChange={this.handleChange}/>\n                      <TextField id=\"outlined-basic\" label=\"Item Cost\" variant=\"outlined\" name=\"add_item_cost\" placeholder=\"0.00\" onChange={this.handleChange} type=\"number\" step={0.01}/>\n                      <div>\n                      <Button onClick={this.handleAddItem}>Add</Button>\n                      <Button onClick={() => this.handleClose(\"add_item\")}>Cancel</Button>\n                      </div>\n                    </div>\n                  </Fade>\n                </Modal>\n                <div className=\"add_item_button\">\n                <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} size='small' display=\"inline\" onClick={() => this.handleOpen(\"add_item\", \"na\", \"na\")}>\n                  Add Item\n                </Button>\n                </div>\n                </div> \n                {/* <ul className=\"innerList\"> */}\n                {\n                  this.state.items.map((item, index) => {\n                    return (\n                      <div key={index+1}>\n                        <Modal\n                          aria-labelledby=\"transition-modal-title\"\n                          aria-describedby=\"transition-modal-description\"\n                          className={classes.modal}\n                          open={this.state.item_modal === item.item_name}\n                          onClose={() => this.handleClose(\"item_modal\")}\n                          closeAfterTransition\n                          BackdropComponent={Backdrop}\n                          BackdropProps={{\n                            timeout: 500,\n                          }}\n                        >\n                          <Fade in={this.state.item_modal === item.item_name}>\n                            <div className={classes.paper_modal}>\n                              <TextField id=\"outlined-basic\" label=\"Change Item Name\" variant=\"outlined\" name=\"new_item_name\" defaultValue={this.state.new_item_name} onChange={this.handleChange}/>\n                              <TextField id=\"outlined-basic\" label=\"Change Cost\" variant=\"outlined\" name=\"new_item_cost\" defaultValue={this.state.new_item_cost} onChange={this.handleChange} type=\"number\" step={0.01}/>\n                              <div>\n                              <Button onClick={this.handleDeleteItem}>Delete</Button>\n                              <Button onClick={() => this.handleItemEdit(item.item_cost)}>Edit</Button>\n                              <Button onClick={() => this.handleClose(\"item_modal\")}>Cancel</Button>\n                              </div>\n                            </div>\n                          </Fade>\n                        </Modal>\n\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} onClick={() => this.handleOpen(\"item_modal\", item.item_name, item.item_cost)} size='small' display=\"inline\">\n                          {item.item_name}: ${item.item_cost} \n                        </Button> \n                        <Autocomplete\n                          id=\"free-solo-demo\"\n                          freeSolo\n                          display='inline'\n                          disableClearable={true}\n                          disableCloseOnSelect={true}\n                          value={this.state.item_assignments[item.item_name]}\n                          multiple\n                          options={[]}\n                          onChange={this.handleAssign}\n                          size='small'\n                          name={item.item_name}\n                          renderInput={(params) => (\n                            <TextField {...params} label=\"user(s)\" margin=\"normal\" variant=\"outlined\" name={item.item_name}/>\n                          )}\n                        />\n                      </div>\n                    )\n                  })\n                }\n                {/* </ul> */}\n                </Paper>\n              </Grid>\n            </Grid>\n            <br></br>\n            <ColoredLine color=\"black\" />\n            <br></br>\n            {/* Render total for each individual */}\n            <Grid container spacing={3}>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  // style={{\"align\": \"right\"}}\n                  open={this.state.add_user}\n                  onClose={() => this.handleClose(\"add_user\")}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                  <Fade in={this.state.add_user}>\n                    <div className={classes.paper_modal}>\n                      <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name=\"add_user_name\" placeholder=\"name\" onChange={this.handleChange}/>\n                      <TextField id=\"outlined-basic\" label=\"Adjusted Amount\" variant=\"outlined\" name=\"add_user_adjusted_amount\" placeholder=\"0.00\" onChange={this.handleChange} type=\"number\" step={0.01}/>\n                      <div>\n                      <Button onClick={this.handleAddUser}>Add</Button>\n                      <Button onClick={() => this.handleClose(\"add_user\")}>Cancel</Button>\n                      </div>\n                    </div>\n                  </Fade>\n                </Modal>\n                <div className=\"add_user_button\">\n                <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} size='small'  display=\"inline\"  onClick={() => this.handleOpen(\"add_user\", \"na\", \"na\")}>\n                  Add User\n                </Button>\n                </div>\n            {\n              this.state.users.map((user, index) => {\n                return (\n                  <Grid item xs key={index+1}>\n                    <Modal\n                      aria-labelledby=\"transition-modal-title\"\n                      aria-describedby=\"transition-modal-description\"\n                      className={classes.modal}\n                      open={this.state.user_modal === user.user_nickname}\n                      onClose={() => this.handleClose(\"user_modal\")}\n                      closeAfterTransition\n                      BackdropComponent={Backdrop}\n                      BackdropProps={{\n                        timeout: 500,\n                      }}\n                    >\n                      <Fade in={this.state.user_modal === user.user_nickname}>\n                        <div className={classes.paper_modal}>\n                            <TextField id=\"outlined-basic\" label=\"Change User Name\" variant=\"outlined\" name=\"new_nickname\" defaultValue={this.state.new_nickname} onChange={this.handleChange}/>\n                            <TextField id=\"outlined-basic\" label=\"Change Adjustment\" variant=\"outlined\" name=\"new_adjusted_amount\" defaultValue={this.state.new_adjusted_amount} onChange={this.handleChange} type=\"number\" step={0.01}/>\n                            <div>\n                            <Button onClick={this.handleDeleteUser}>Delete</Button>\n                            <Button onClick={() => this.handleUserEdit(user.user_adjusted_amount)}>Edit</Button>\n                            <Button onClick={() => this.handleClose(\"user_modal\")}>Cancel</Button>\n                            </div>\n                        </div>\n                      </Fade>\n                    </Modal>\n                    <Paper className={classes.paper}>\n                      <div style={{\n                          \"display\": \"flex\",\n                          \"justifyContent\": \"center\",\n                          \"alignItems\": \"center\",\n                        }}>\n                        <Button onClick={() => this.handleOpen(\"user_modal\", user.user_nickname, user.user_adjusted_amount)}>{user.user_nickname}</Button>\n                      </div>\n                      <div className=\"innerList\">\n                        {\n                          // check if the user_adjusted_amount exists\n                          this.state.user_assignments === undefined\n                          ?\n                            <div style={{\"textAlign\": \"center\"}}>\n                            no assignments\n                            </div>\n                          : (\n                            // check if the user array is empty\n                            this.state.user_assignments[user.user_nickname].length === 0\n                            ?\n                              <div>\n                                <div style={{\"textAlign\": \"center\"}}> no assignments </div>\n                                <div style={{\"textAlign\": \"center\"}}> adjustments: {user.user_adjusted_amount.toFixed(2)} </div>\n                              </div>\n                            : (\n                              <div style={{\"textAlign\": \"center\"}}> \n                                { \n                                  this.state.user_assignments[user.user_nickname].map((item, index2) => {\n                                    return (\n                                      <div key={index2+1} style={{\"textAlign\": \"center\"}}>\n                                        {item}\n                                      </div>\n                                    )\n                                  })\n                                }\n                                <br/>\n                                <div>\n                                total: {user.user_amount_owed.toFixed(2)} \n                                <br/>\n                                adjustments: {user.user_adjusted_amount.toFixed(2)}\n                                </div>\n                              </div>\n                            )\n                          )\n                        }\n                      </div>\n                    </Paper>\n                  </Grid>\n                )\n              })\n            }\n            </Grid>\n            {/* Render group total */}\n            <Grid container spacing={3}>\n              <Grid item xs>\n                <Paper className={classes.paper}>\n                  {/* Grand Total */}\n                  {/* <ul className=\"innerList\"> */}\n                  {\n                    this.state.edit_tip\n                    ?\n                    <div style={{\"textAlign\": \"center\"}}>\n                      <TextField id=\"outlined-basic\" label=\"Tip\" variant=\"outlined\" name=\"new_tip_rate\" onChange={this.handleChange} defaultValue={this.state.new_tip_rate} type=\"number\"/>\n                      <Button onClick={this.handleTip}>Submit</Button>\n                      <Button onClick={() => this.handleClose(\"edit_tip\")}>Cancel</Button>\n                    </div>\n                    :\n                    <div className=\"edit_flex_container\">\n                      <div>Tip Rate: {this.state.tip_rate}%</div>\n                      <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} size='small' display=\"inline\" onClick={() => this.handleOpen(\"edit_tip\")}>Edit Tip</Button>\n                      </div>\n                  }\n                    <div style={{\"textAlign\": \"center\"}}>Tax Rate: {\n                      this.state.tax_rate === 0\n                      ? 0\n                      : (this.state.tax_rate-1).toFixed(6) * 100\n                    }% </div>\n                    <div style={{\"textAlign\": \"center\"}}>SubTotal: ${this.state.sub_total.toFixed(2)}</div>\n                    <div style={{\"textAlign\": \"center\"}}>Grand Total: ${this.state.total_cost.toFixed(2)}</div>\n                    <div style={{\"textAlign\": \"center\"}}>Net Adjustments: ${this.state.total_adjustment.toFixed(2)}</div>\n                  {/* </ul> */}\n                  {\n                    this.state.image_url.length > 0\n                    ?\n                      this.state.show_image \n                      ? \n                        <div>\n                          <Button onClick={this.handleImage}>Hide</Button>\n                          <img style={{width: 225}} src={this.state.image_url} alt={\"None\"}/>\n                        </div>\n                      :\n                        <Button onClick={this.handleImage}>Show</Button>\n                    :\n                  <p>No Receipt Uploaded</p>\n                  }\n                  <Form className=\"form\" onSubmit={this.handleReupload}>\n                    <div>\n                      <input type=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImagePreview}/>\n                      <br></br>\n                      <img style={{width: 225}} src={this.state.preview} alt={\"\"}/>\n                    </div>\n                    <Button type='submit'>New Upload</Button>\n                  </Form>\n                </Paper>\n              </Grid>\n            </Grid>  \n            <br></br>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\n// use styles for Material UI with react class component\nexport default withStyles(styles, { withTheme: true })(SplitBillPage);\n","import React from 'react';\nimport MainPage from './components/main_page/MainPage';\nimport CreateGroup from './components/create_group/CreateGroup'\nimport JoinGroup from './components/join_group/JoinGroup'\n// import SplitBill from './components/split_bill/SplitBill'\nimport { Route, Switch } from 'react-router-dom';\nimport SplitBillPage from './components/split_bill_page/SplitBillPage'\n\nfunction App() {\n  const MainPageComponent = () => <MainPage/>\n  const CreateGroupComponent = () => <CreateGroup/>\n  const JoinGroupComponent = () => <JoinGroup/>\n  // const SplitBillComponent = () => <SplitBill/>\n  // in react router to access the url we need to pass in a prop which will automatically contain the URL\n  // other approach is use vanilla js in component and use \"window.location.href\"\n  const SplitBillPageComponent = (group_url) => <SplitBillPage groupURL={group_url}/>\n\n  return (\n    <div className=\"App\">\n      <Switch> \n        <Route exact path=\"/\" render={MainPageComponent}/>\n        <Route exact path=\"/create_group\" component={CreateGroupComponent} />\n        <Route exact path=\"/join_group\" component={JoinGroupComponent} />\n        <Route exact path=\"/split_bill\" component={MainPageComponent} />\n        <Route path = '/split_bill/:groupURL' component={SplitBillPageComponent}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * BrowserRouter is a version of react routing in order to match the\n * UI(User Interface) with the URL selected.\n * So it basically is one of many approaches \n * to ensure what we see on the webpage matches the link we are at.\n * in other words\n * This provides the routing ability to change the URL to the \n * appropriate link such that additional features can be loaded\n * in for our SPA(Single Page Application). It allowes the user to move backwards and\n * forwards in the webpage. Also provides deeplinking\n * where hyperlinks lead to a specific content instead of a \n * general home page.\n * \n * https://stackoverflow.com/questions/53065686/why-do-we-use-browserrouter-in-react\n */\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}