{"version":3,"sources":["components/nav_bar/NavBar.jsx","components/main_page/MainPage.jsx","components/places_autocomplete/PlacesAutocomplete.jsx","components/create_group/CreateGroup.jsx","components/join_group/JoinGroup.jsx","components/split_bill_page/SplitBillPage.js","App.js","index.js"],"names":["NavBar","props","useState","page","setPage","useEffect","to","Navbar","bg","variant","Brand","onClick","Nav","className","Button","MainPage","Component","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","GoogleMaps","classes","React","value","setValue","inputValue","setInputValue","options","setOptions","loaded","useRef","autocompleteService","window","current","document","querySelector","src","position","id","script","createElement","setAttribute","appendChild","loadScript","fetch","useMemo","throttle","request","callback","getPlacePredictions","active","google","maps","places","AutocompleteService","input","types","results","newOptions","Autocomplete","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","handleParentFunc","onInputChange","newInputValue","renderInput","params","TextField","label","fullWidth","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","map","match","offset","length","Grid","container","alignItems","item","xs","part","index","key","style","fontWeight","highlight","Typography","secondary_text","CreateGroup","handleChange","setState","target","name","handleImage","image","URL","createObjectURL","files","imageblob","Blob","file","preview","handleUsers","type","input_users","exists","state","user_name","alert","handleSubmit","a","preventDefault","data","FormData","append","method","body","response","status","json","result","image_s3url","message","console","log","error","input_address","input_location","input_city","input_state","input_zip_code","input_tip","headers","JSON","stringify","group_url","link","redirect","split","inputFileRef","createRef","this","onSubmit","initialValues","handleBlur","Form","Group","controlId","Label","multiple","freeSolo","required","FormControl","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","Control","Feedback","accept","ref","width","alt","JoinGroup","session_link","start","search","substring","submit_link","Input","FormHelperText","QRCode","require","ColoredLine","backgroundColor","height","margin","SplitBillPage","fetchGroupData","items","sort","b","item_name","city","image_url","item_assignments","user_assignments","location_name","state_name","street_address","sub_total","tax_rate","tip_rate","total_adjustment","total_cost","users","user_count","zip_code","address","handleAssign","s_name","removed","filter","includes","socket","emit","handleItemEdit","old_value","cost","new_item_name","item_modal","new_item_cost","handleUserEdit","adjustment","new_nickname","user_modal","new_adjusted_amount","handleOpen","obj","handleClose","handleDeleteItem","handleDeleteUser","new_user_name","handleAddUser","add_user_name","add_user_adjusted_amount","add_user","handleAddItem","add_item_name","add_item_cost","add_item","handleTip","tip","new_tip_rate","parseFloat","edit_tip","show_image","copyCodeToClipboard","textArea","select","execCommand","copySuccess","handleReupload","values","handleImagePreview","undefined","componentDidMount","io","connect","reconnection","transports","on","componentWillUnmount","groupURL","url","full_url","location","href","textarea","defaultValue","Paper","paper","Modal","aria-labelledby","aria-describedby","modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper_modal","placeholder","step","item_button","size","display","item_cost","disableClearable","disableCloseOnSelect","user","user_nickname","user_adjusted_amount","toFixed","index2","user_amount_owed","withStyles","root","flexGrow","padding","justifyContent","background","border","boxShadow","shadows","withTheme","App","MainPageComponent","exact","path","render","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a1054183.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\nconst NavBar = (props) => {\n  const [page, setPage] = useState(\"\");\n\n  useEffect(() => {\n    setPage(\"\");\n  }, [page]);\n\n  if (page === \"main\") {\n    return <Redirect to=\"/\" />;\n  } else if (page === \"create\") {\n    return <Redirect to=\"/create_group\" />;\n  } else if (page === \"join\") {\n    return <Redirect to=\"/join_group\" />;\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand onClick={() => setPage(\"main\")}>Blitz</Navbar.Brand>\n        <Nav className=\"ml-auto\">\n          <Button\n            className=\"button\"\n            variant=\"dark\"\n            onClick={() => setPage(\"main\")}\n          >\n            {\" \"}Home{\" \"}\n          </Button>\n          <Button variant=\"dark\" onClick={() => setPage(\"create\")}>\n            {\" \"}Create{\" \"}\n          </Button>\n          <Button variant=\"dark\" onClick={() => setPage(\"join\")}>\n            {\" \"}Join{\" \"}\n          </Button>\n          {/* <Nav.Link href=\"#home\">Home</Nav.Link> */}\n          {/* <Nav.Link href=\"#create-group\">Create Group</Nav.Link> */}\n          {/* <Nav.Link href=\"#join-group\">Join Group</Nav.Link> */}\n        </Nav>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport NavBar from '../nav_bar/NavBar'\nimport './MainPage.css'\n\nclass MainPage extends Component{\n  render(){\n    return(\n      <div>\n        <NavBar/>\n        <div className=\"text\">\n          <h1>What do we do?</h1>\n          <p>We help people split the bill.</p>\n          <h2>How it works:</h2>\n          <ol>\n            <li>Create a group</li>{\" \"}\n            <li>Enter Parameters (enter number of people)</li>{\" \"}\n            <li>Upload the receipt and share your group's link</li>{\" \"}\n            <li>Each individual selects their purchase(s)</li> <li>That's it</li>{\" \"}\n          </ol>{\" \"}\n        </div>\n      </div>\n    )   \n  }\n  \n}\n\nexport default MainPage;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function GoogleMaps(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n  const autocompleteService = React.useRef();\n  const api_key = process.env.REACT_APP_API_KEY;\n\n\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(\n        'https://maps.googleapis.com/maps/api/js?key=' + api_key + '&libraries=places',\n        document.querySelector('head'),\n        'google-maps',\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    [autocompleteService],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue, types: [\"address\"] }, (results) => {\n      if (active) {\n        let newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch, props]);\n\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n        props.handleParentFunc(newValue.description);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Add a location\" variant=\"filled\" fullWidth />\n      )}\n      renderOption={(option) => {\n        const matches = option.structured_formatting.main_text_matched_substrings;\n        const parts = parse(\n          option.structured_formatting.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length]),\n        );\n\n        return ( \n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {parts.map((part, index) => (\n                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                  {part.text}\n                </span>\n              ))}\n\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {option.structured_formatting.secondary_text}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n}","import React, { Component } from 'react';\nimport NavBar from '../nav_bar/NavBar';\nimport './CreateGroup.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Formik } from 'formik';\nimport PlacesAutocomplete from '../places_autocomplete/PlacesAutocomplete';\n// import Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Redirect } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nclass CreateGroup extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      file: null,\n      preview: \"\",\n      input_users: [],\n      input_address: \"\",\n      input_zip_code: \"\",\n      input_city: \"\",\n      input_state: \"\",\n      input_tip: 0,\n      input_location: \"\",\n      redirect: false,\n      group_url: \"\",\n      image_s3url: \"\",\n    }\n    this.inputFileRef = React.createRef();\n  }\n\n  // Handle the form here\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleImage = (event) => {\n    let image = URL.createObjectURL(event.target.files[0]) // for preview\n    const imageblob = new Blob([event.target.files[0]]) // to store\n    this.setState({\n      file: imageblob,\n      preview: image\n    })\n  }\n\n  handleUsers = (event, value, type) => {\n    if (type === \"remove-option\") {\n      this.setState({\n        input_users: value\n      })\n    } else if (type === \"create-option\") {\n      let exists = false;\n      this.state.input_users.map((user_name) => {\n        if(user_name === event.target.value) {\n          exists = true;\n          return (alert(\"Duplicate User Cannot Exist\"));\n        } \n        return null;\n      })\n      if(exists) {\n        return;\n      }\n      this.setState({\n        input_users: [...this.state.input_users, event.target.value]\n      })\n    } else {\n      return;\n    }\n  }\n\n  // call the api endpoint here\n  // put upload image here if it exists, call upload image api\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    // First need to upload the image if it exists\n    if(this.state.preview !== \"\") { // check if preview empty rather then blob data\n      // call uploadimage api to get object url\n      let data = new FormData();\n      data.append('file', this.state.file);\n\n      const response = await fetch('/api/upload_image', {\n        method: 'POST',\n        body: data\n      })\n      const status = response.status\n      const result = await response.json();\n\n      if(status === 200) {\n        this.setState({\n          image_s3url: result.message\n        })\n      } else {\n        console.log(result.error)\n        return;\n      }\n    }\n    \n    // Now upload rest of data\n    let data = {\n      \"users\": this.state.input_users,\n      \"street_address\": this.state.input_address,\n      \"location_name\": this.state.input_location,\n      \"city\": this.state.input_city, \n      \"state\": this.state.input_state,\n      \"zip_code\": this.state.input_zip_code,\n      \"image_s3url\": this.state.image_s3url,\n      \"tip_rate\": this.state.input_tip\n    }\n\n    try {\n      const response = await fetch(\"/api/create_group\", {\n        headers: {\n          \"Content-Type\": 'application/json',\n          \"Accept\": 'application/json',\n        },\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n\n      const status = response.status;\n      const result = await response.json();\n\n      if(status === 200) {\n        this.setState({\n          group_url: result.link,\n          redirect: true\n        })\n      } else {\n        alert(result.error);\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  } \n\n  //Handles Google API address field\n  handleParentFunc = (value) =>{\n    if (value) {\n      const [input_address, input_city, input_state, input_zip_code] = value.split(',');\n      if (input_address && input_city && input_state && input_zip_code) {\n        this.setState({\n          input_address,\n          input_zip_code,\n          input_city,\n          input_state,\n        });\n      }\n    }\n  }\n\n  render () {\n    if(this.state.redirect) {\n      return <Redirect to={this.state.group_url}/>\n    }\n    return(\n      <Formik\n        onSubmit={this.handleSubmit}\n        initialValues={{\n          input_users: '',\n          input_address: '',\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n        }) => (\n        <div>\n          <NavBar/>\n          <div className=\"text\">\n            <div>Creating Your Group</div>\n            <br></br>\n            <Form className=\"form\" onSubmit={this.handleSubmit}>\n              \n              <Form.Group controlId=\"form.input_users\">\n                <Form.Label>\n                  Input name(s):\n                </Form.Label>\n              <Autocomplete\n              multiple\n              id=\"input_users\"\n              options={[]}\n              freeSolo\n              required = \"Please enter at least one user\"\n              onChange = {this.handleUsers}\n              value={this.state.input_users}\n              renderInput={(params) => (\n                <TextField {...params} variant=\"filled\" label=\"User(s)\" />\n              )}\n              \n            />\n              </Form.Group>\n              \n              <Form.Group className=\"form-group\" controlId=\"form.input_location\">\n                <Form.Label>\n                  Input location:\n                </Form.Label>\n              {/* <Form.Control \n                placeholder=\"Location Name\"\n                name=\"input_location\"\n                onChange={this.handleChange}\n                value={this.state.input_location}\n                isValid={touched.input_location && !errors.input_location}\n                required = \"Please enter your location\"\n              />  */}\n                <br></br>\n                <TextField\n                  fullWidth\n                  required\n                  label=\"Establishment\"\n                  name=\"input_location\"\n                  onChange={this.handleChange}\n                  value={this.state.input_location}\n                  // helperText=\"Ex: name of restaurant\"\n                  variant=\"filled\"\n                />\n              </Form.Group>\n              \n              <Form.Group controlId=\"form.input_address\">\n                <Form.Label>Address:</Form.Label>\n                 {/* <Form.Control\n                  type=\"text\"\n                  placeholder=\"Address\"\n                  name=\"input_address\"\n                  onChange={handleChange}\n                  value={values.input_address}\n                  as=\"textarea\" rows=\"1\" \n                  required\n                />  */}\n                <PlacesAutocomplete\n                  // onChange={(event, value) => {\n                  //   this.handleParentFunc(value);\n                  // }}\n                  handleParentFunc={(value)=> {\n                    // console.log(\"your value --> \", value);\n                    // this.setState({\n                    //   input_address: value\n                    // })\n                    this.handleParentFunc(value);\n                    }\n                  }\n                />\n              </Form.Group>\n\n              <Form.Group className=\"form-group\" controlId=\"form.select_state\">\n                {/* <Form.Label>State(optional):</Form.Label> */}\n                {/* <Form.Control\n                  name=\"select_state\"\n                  onChange={this.handleChange}\n                  onBlur={handleBlur}\n                  value={this.state.select_state}\n                  as=\"select\">\n                  <option value=\"\">Select a state</option>\n                  <option value=\"Alabama\">Alabama</option>\n                  <option value=\"Alaska\">Alaska</option>\n                  <option value=\"Arizona\">Arizona</option>\n                  <option value=\"Arkansas\">Arkansas</option>\n                  <option value=\"California\">California</option>\n                  <option value=\"Colorado\">Colorado</option>\n                  <option value=\"Connecticut\">Connecticut</option>\n                  <option value=\"Delaware\">Delaware</option>\n                  <option value=\"Florida\">Florida</option>\n                  <option value=\"Georgia\">Georgia</option>\n                  <option value=\"Hawaii\">Hawaii</option>\n                  <option value=\"Idaho\">Idaho</option>\n                  <option value=\"Illinois\">Illinois</option>\n                  <option value=\"Indiana\">Indiana</option>\n                  <option value=\"Iowa\">Iowa</option>\n                  <option value=\"Kansas\">Kansas</option>\n                  <option value=\"Kentucky\">Kentucky</option>\n                  <option value=\"Louisiana\">Louisiana</option>\n                  <option value=\"Maine\">Maine</option>\n                  <option value=\"Maryland\">Maryland</option>\n                  <option value=\"Massachusetts\">Massachusetts</option>\n                  <option value=\"Michigan\">Michigan</option>\n                  <option value=\"Minnesota\">Minnesota</option>\n                  <option value=\"Mississippi\">Mississippi</option>\n                  <option value=\"Missouri\">Missouri</option>\n                  <option value=\"Montana\">Montana</option>\n                  <option value=\"Nebraska\">Nebraska</option>\n                  <option value=\"Nevada\">Nevada</option>\n                  <option value=\"New Hampshire\">New Hampshire</option>\n                  <option value=\"New Jersey\">New Jersey</option>\n                  <option value=\"New Mexico\">New Mexico</option>\n                  <option value=\"New York\">New York</option>\n                  <option value=\"North Carolina\">North Carolina</option>\n                  <option value=\"North Dakota\">North Dakota</option>\n                  <option value=\"Ohio\">Ohio</option>\n                  <option value=\"Oklahoma\">Oklahoma</option>\n                  <option value=\"Oregon\">Oregon</option>\n                  <option value=\"Pennsylvania\">Pennsylvania</option>\n                  <option value=\"Rhode Island\">Rhode Island</option>\n                  <option value=\"South Carolina\">South Carolina</option>\n                  <option value=\"South Dakota\">South Dakota</option>\n                  <option value=\"Tennessee\">Tennessee</option>\n                  <option value=\"Texas\">Texas</option>\n                  <option value=\"Utah\">Utah</option>\n                  <option value=\"Vermont\">Vermont</option>\n                  <option value=\"Virginia\">Virginia</option>\n                  <option value=\"Washington\">Washington</option>\n                  <option value=\"West Virginia\">West Virginia</option>\n                  <option value=\"Wisconsin\">Wisconsin</option>\n                  <option value=\"Wyoming\">Wyoming</option>\n                </Form.Control> */}\n              </Form.Group>\n              \n              <Form.Group controlId=\"form.input_tip\">\n                <Form.Label>\n                  Input Tip here:\n                </Form.Label>\n              {/* <Form.Control \n                type=\"text\"\n                placeholder=\"Tip\"\n                name=\"input_tip\"\n                onChange={this.handleChange}\n                value={this.state.input_tip}\n                isValid={touched.input_tip && !errors.input_tip}\n                required = \"Please enter your tip\"\n              />  */}\n              <FormControl fullWidth variant=\"filled\">\n                <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\n                <FilledInput\n                  id=\"filled-adornment-amount\"\n                  name=\"input_tip\"\n                  // input type = {Number}\n                  value={this.state.input_tip}\n                  onChange={this.handleChange}\n                  endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\n                />\n              </FormControl>\n                <Form.Control.Feedback></Form.Control.Feedback>\n              </Form.Group>\n                <br></br>\n                <div>\n                  <input type=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" ref={this.inputFileRef} onChange={this.handleImage}/>\n                  <br></br>\n                  <img style={{width: 225}} src={this.state.preview} alt={\"\"}/>\n                </div>\n                <br></br>\n              <Button type=\"submit\"> Submit form </Button>\n            </Form>\n          </div>\n      </div>\n    )} \n    </Formik>  \n    )   \n  }\n}\n\nexport default CreateGroup;\n","import React, { Component } from \"react\";\nimport NavBar from \"../nav_bar/NavBar\";\nimport { Button } from \"reactstrap\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Input } from \"@material-ui/core\";\nimport \"./JoinGroup.css\";\nimport { Redirect } from \"react-router-dom\";\n\nclass JoinGroup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      session_link: \"\",\n      submit_link: \"\",\n    };\n  }\n\n  handleChange = (event) =>{\n    this.setState({\n      session_link: event.target.value\n    });\n  }\n\n  handleSubmit = () =>{\n    if(this.state.session_link.length === 0) {\n      return(alert(\"Please enter a link\"))\n    }\n    const start = this.state.session_link.search('/split_bill');\n\n    if(start === -1) {\n      return (alert(\"Please enter a valid link\"))\n    }\n    this.state.session_link.substring(start);\n\n    this.setState({\n      submit_link: this.state.session_link.substring(start, this.state.session_link.length),\n    })\n  }\n\n  render(){  \n    if(this.state.submit_link !== \"\") {\n      return <Redirect to={this.state.submit_link}/>\n    }\n    return (\n        <div>\n          <NavBar />\n          <div className=\"text\">\n              <label className=\"form\">\n                Enter your invite link:\n                <br></br>\n                <Input type=\"text\" value={this.state.session_link} onChange={this.handleChange}></Input>\n              </label>\n              <br></br>\n              {/* <input type=\"submit\" value=\"Submit\"/> */}\n              <Button type=\"submit\" onClick={this.handleSubmit}>Join</Button>\n              <FormHelperText id=\"my-helper-text\">This will redirect you to your session.</FormHelperText>\n          </div>\n        </div>\n    );\n  }\n};\n\nexport default JoinGroup;","import React, { Component } from 'react';\nimport NavBar from '../nav_bar/NavBar'\n// need to use withStyles to combine Material UI design with react compnents at end of file when exporting\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n// import { FormControl, Select, InputLabel, MenuItem} from '@material-ui/core';\nimport './SplitBill.css'\nimport { Redirect } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Form from 'react-bootstrap/Form';\nimport io from \"socket.io-client\";\n\nvar QRCode = require('qrcode.react');\n// import QRCode from \"qrcode.react\";\n\nconst styles = (theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      // textAlign: 'center',\n      color: theme.palette.text.secondary,\n      margin: '1%'\n    },\n    fullWidth: {\n      width: '100%',\n    },\n    item_button: {\n      margin: '0.1em'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper_modal: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n});\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 5,\n            margin: 5, \n        }}\n    />\n);\n\nclass SplitBillPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      group_url: props.groupURL.match.url,\n      full_url: window.location.href,\n      image_url: \"\",\n      item_assignments: {},\n      user_assignments: {},\n      items: [],\n      location_name: \"\",\n      state_name: \"\",\n      street_address: \"\",\n      sub_total: 0.0,\n      tax_rate: 0.0,\n      tip_rate: 0.0,\n      total_adjustment: 0,\n      total_cost: 0,\n      users: [],\n      zip_code: \"\",\n      redirect: false,\n      user_count: 0,\n      address: \"\",\n      user_modal: \"\",\n      new_user_name: \"\",\n      new_adjusted_amount: \"\",\n      item_modal: \"\",\n      new_item_name: \"\",\n      new_item_cost: \"\",\n      add_item: false,\n      add_item_name: \"\",\n      add_item_cost: \"0.0\",\n      add_user: false,\n      add_user_name: \"\",\n      add_user_adjusted_amount: \"0.0\",\n      new_tip_rate: \"\",\n      copySuccess: false,\n      show_image: false,\n      socket: \"\",\n      file: null,\n      preview: \"\",\n    }\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  // –––––––––––– Get Group Data –––––––––––––––––––––––\n  fetchGroupData = async () => {\n    // With get requests cant pass a body, so pass in URL parameter instead, should be URL encoded but in this case skipped as it currently works without it\n    try {\n      const response = await fetch(`/api/get_group/?group_URL=${this.state.group_url}`)\n      const status = response.status;\n      const result = await response.json();\n  \n      if(status === 200) {\n        result.items.sort(function(a, b) {\n          // console.log(a.item_name < b.item_name)\n          if(a.item_name < b.item_name) { return -1; }\n          if(a.item_name > b.item_name) { return 1; }\n          return 0;\n        });\n\n        this.setState({\n          city: result.city,\n          image_url: result.image_url,\n          item_assignments: result.item_assignments,\n          user_assignments: result.user_assignments,\n          items: result.items,\n          location_name: result.location_name,\n          state_name: result.state_name,\n          street_address: result.street_address,\n          sub_total: result.sub_total,\n          tax_rate: result.tax_rate,\n          tip_rate: result.tip_rate,\n          total_adjustment: result.total_adjustment,\n          total_cost: result.total_cost,\n          users: result.users,\n          user_count: result.user_count,\n          zip_code: result.zip_code,\n          address: result.street_address + ', ' + result.city + ', ' + result.state_name,\n        })\n      } else if (status >= 400) {\n          this.setState({\n            redirect: true\n          }, () => {alert(result.error)});\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // –––––––––––– Assign or Unassign Member ––––––––––––\n  handleAssign = async (event, value, type, s_name) => {\n    // assign an item to a user\n    let status = null;\n    let result = null;\n    if(type === 'create-option') {\n      const data = {\n        \"nickname\": value[value.length-1],\n        \"item_name\": event.target.name,\n        \"group_url\": this.state.group_url\n      };\n\n      const response = await fetch('/api/assign_item', {\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": 'application/json'\n        }, \n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n\n      status = response.status;\n      result = await response.json();\n    } else if (type === 'remove-option') { // unassign and item to a user\n      // get removed value by using difference between value and state\n      let removed = null;\n      if(!value) {\n        removed = this.state.item_assignments[event.target.name][0];\n      } else if (!event.target.name) {\n        return;\n      } else {\n        removed = this.state.item_assignments[event.target.name].filter(item => \n          !value.includes(item)\n        )\n      }\n      const data = {\n        \"nickname\": removed[0],\n        \"item_name\": event.target.name,\n        \"group_url\": this.state.group_url\n      };\n\n      const response = await fetch('/api/unassign_item', {\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": 'application/json'\n        }, \n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n\n      status = response.status;\n      result = await response.json();\n    } else {\n      return;\n    }\n    if (status === 200) {\n      // console.log(result.message);\n      // get data again\n      await this.fetchGroupData();\n      this.state.socket.emit('new_update', this.state.group_url);\n      // console.log(\"Data Updated\");\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Edit Item or Edit User –––––––––––––––\n  handleItemEdit = async (old_value) => {\n    // parse integer into float\n    let cost = \"0.0\";\n    if(this.state.new_item_name === this.state.item_modal && this.state.new_item_cost === old_value) {\n      return alert(\"Please enter some change to edit\");\n    } else if (this.state.new_item_name.length === 0) {\n      return alert(\"Name cannot be empty\");\n    } else if(this.state.new_item_cost.length !== 0) {\n      // cost = parseFloat(this.state.new_item_cost).toFixed(2);\n      cost = this.state.new_item_cost;\n    }\n    \n    const data = {\n      \"item_name\": this.state.item_modal,\n      \"new_item_name\": this.state.new_item_name, // if no new then can be empty or same as original\n      \"new_item_cost\": cost, \n      \"group_url\": this.state.group_url\n    }\n\n    const response = await fetch('/api/edit_item', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        item_modal: \"\",\n        new_item_name: \"\",\n        new_item_cost: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  handleUserEdit = async (old_value) => {\n    let adjustment = \"0.0\";\n    if(this.state.new_nickname === this.state.user_modal && this.state.new_adjusted_amount === old_value) {\n      return alert(\"Please enter something different to edit\");\n    } else if (this.state.new_nickname.length === 0) {\n      return alert(\"Username cannot be empty!\");\n    } else if (this.state.new_adjusted_amount !== 0) {\n      adjustment  = this.state.new_adjusted_amount;\n    }\n\n    const data = {\n      \"nickname\": this.state.user_modal,\n      \"new_nickname\": this.state.new_nickname,\n      \"adjusted_amount\": adjustment,\n      \"group_url\": this.state.group_url\n    };\n\n    const response = await fetch('/api/edit_user', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n\n    const status = response.status;\n    const result = await response.json();\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        user_modal: \"\",\n        new_nickname: \"\",\n        new_adjusted_amount: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Modal Opening and Closing ––––––––––––\n  handleOpen = (obj, name, cost) => {\n    if(obj === \"user_modal\") {\n      this.setState({\n        [obj]: name,\n        new_adjusted_amount: cost,\n        new_nickname: name\n      })\n    } else if(obj === \"item_modal\") {\n      this.setState({\n        [obj]: name,\n        new_item_cost: cost,\n        new_item_name: name\n      })\n    } else if(obj === \"add_item\" || obj ===\"add_user\"){\n      this.setState({\n        [obj]: true\n      })\n    } else if(obj === \"edit_tip\") {\n      this.setState({\n        [obj]: true,\n        new_tip_rate: this.state.tip_rate\n      })\n    }\n  }\n\n  handleClose = (obj) => {\n    if(obj === \"user_modal\") {\n      this.setState({\n        [obj]: \"\",\n        new_adjusted_amount: \"\",\n        new_user_name: \"\"\n      })\n    } else if (obj === \"item_modal\") {\n      this.setState({\n        [obj]: \"\",\n        new_item_cost: \"\",\n        new_item_name: \"\"\n      })\n    } else if (obj === \"add_item\" || obj === \"add_user\" || obj ===\"edit_tip\") {\n      this.setState({\n        [obj]: false\n      })\n    }\n  }\n  // –––––––––––– Delete Item or User ––––––––––––––––––\n  handleDeleteItem = async () => {\n    const data = {\n      \"item_name\": this.state.item_modal,\n      \"group_url\": this.state.group_url\n    }\n\n    const response = await fetch('/api/delete_item', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'DELETE',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        item_modal: \"\",\n        new_item_name: \"\",\n        new_item_cost: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  handleDeleteUser = async () => {\n    const data = {\n      \"nickname\": this.state.user_modal,\n      \"group_url\": this.state.group_url\n    };\n\n    const response = await fetch('/api/delete_user', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'DELETE',\n      body: JSON.stringify(data)\n    });\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200){\n      // console.log(result.message)\n      await this.fetchGroupData();\n      this.setState({\n        user_modal: \"\",\n        new_adjusted_amount: \"\",\n        new_user_name: \"\"\n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error)\n    }\n  }\n\n  // –––––––––––– Add User or Item –––––––––––––––––––––\n  handleAddUser = async () => {\n    if(this.state.add_user_name.length === 0) {\n      return alert(\"User must have name\");\n    } else if(this.state.add_user_adjusted_amount.length === 0) {\n      return alert(\"User must have some cost\");\n    }\n\n    const data = {\n      \"nickname\": this.state.add_user_name,\n      \"amount_adjusted\": this.state.add_user_adjusted_amount,\n      \"group_url\": this.state.group_url\n    }\n      \n    const response = await fetch('/api/create_user', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        add_user: false,\n        add_user_name: \"\",\n        add_user_adjusted_amount: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  handleAddItem = async () => {\n    if(this.state.add_item_name.length === 0) {\n      return alert(\"Item must have name\");\n    } else if(this.state.add_item_cost.length === 0) {\n      return alert(\"Item must have some cost\");\n    }\n\n    const data = {\n      \"item_name\": this.state.add_item_name,\n      \"item_cost\": this.state.add_item_cost,\n      \"group_url\": this.state.group_url\n    }\n      \n    const response = await fetch('/api/create_item', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n\n    const status = response.status;\n    const result = await response.json();\n\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        add_item: false,\n        add_item_name: \"\",\n        add_item_cost: \"\", \n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Edit Tip –––––––––––––––––––––––––––––\n  handleTip = async () => {\n    let tip = \"0.0\";\n    if (this.state.new_tip_rate.length > 0 && this.state.new_tip_rate[0] === '-') {\n      return alert(\"Tip cannot be negative\");\n    } else if(parseFloat(this.state.new_tip_rate) === this.state.tip_rate) {\n      return alert(\"Please enter a different tip rate\");\n    } else if (this.state.new_tip_rate.length !== 0) {\n      tip = parseFloat(this.state.new_tip_rate);\n    }\n\n    const data = {\n      \"tip_rate\": tip,\n      \"group_url\": this.state.group_url\n    };\n\n    const response = await fetch('/api/edit_tip_rate', {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json',\n      },\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n\n    const status = response.status;\n    const result = await response.json();\n    if(status === 200) {\n      // console.log(result.message);\n      await this.fetchGroupData();\n      this.setState({\n        edit_tip: false,\n        new_tip_rate: \"\",\n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n    } else {\n      alert(result.error);\n    }\n  }\n\n  // –––––––––––– Handle preview –––––––––––––––––––––––\n  handleImage = () => {\n    this.setState({\n      show_image: !this.state.show_image\n    })\n  }\n\n  // –––––––––––– Copy URL –––––––––––––––––––––––––––––\n  copyCodeToClipboard = () => {\n    const el = this.textArea\n    el.select()\n    document.execCommand(\"copy\")\n    this.setState({copySuccess: true})\n  }\n\n  // –––––––––––– Reupload –––––––––––––––––––––––––––––\n  handleReupload = async (event) => {\n    event.preventDefault(); // prevent form from refreshing page by iteslf\n    if((this.state.file === null) || (this.state.preview.length === 0)) {\n      return alert(\"Please Choose a New Image to Upload\");\n    }\n    let data = new FormData();\n    data.append('file', this.state.file);\n    for (var value of data.values()) {\n      console.log(value); \n    }\n\n    const response = await fetch(`/api/reupload_image/?group_URL=${this.state.group_url}`, {\n      method: 'POST',\n      body: data\n    })\n    const status = response.status\n    const result = await response.json();\n\n    if(status === 200) {\n      this.setState({\n        preview: \"\",\n        show_image: false\n      })\n      this.state.socket.emit('new_update', this.state.group_url);\n      await this.fetchGroupData();\n      // window.location.reload(); // trigger entire page refresh can be solution for text displayed on screen\n    } else {\n      console.log(result.error)\n      console.log(\"This doesn't work\")\n      return;\n    }\n  }\n\n  handleImagePreview = (event) => {\n    if(event.target.files[0] === undefined) {\n      if(this.state.preview.length > 0) {\n        this.setState({\n          preview: \"\"\n        })\n      }\n      return;\n    }\n    let image = URL.createObjectURL(event.target.files[0]) // for preview\n    const imageblob = new Blob([event.target.files[0]]) // to store\n    this.setState({\n      file: imageblob,\n      preview: image,\n    })\n  }\n\n  componentDidMount = async () => {\n    await this.fetchGroupData();\n\n    const ENDPOINT = \"/socket\";\n    const socket = io.connect(ENDPOINT, {\n      reconnection: true,\n      transports: ['websocket'] // need to upgrade to websockets succesfully \n    })\n\n    this.setState({\n      socket: socket\n    })\n        \n    socket.emit('join', {\n      'room': this.state.group_url\n    })\n\n    socket.on('new_update', () => {\n      this.fetchGroupData();\n    })\n  }\n\n  componentWillUnmount = () => {\n    this.state.socket.emit('leave', {\n      'room': this.state.group_url\n    })\n  }\n\n  render() {\n    // get access to the styling for our components to use\n    const classes = this.props.classes;\n    return (\n      <div>\n        <NavBar/>\n        {\n          this.state.redirect \n          ? \n          <Redirect to='/'/>\n          :\n          <div>\n            <br/>\n            <h4 style={{\"textAlign\": \"center\"}}> {this.state.location_name} </h4>\n            <p style={{\"textAlign\": \"center\"}}> {this.state.address} </p>\n            <div style={{\"textAlign\": \"center\"}}>\n              <textarea\n                style={{\"width\": \"250px\"}}\n                ref={(textarea) => this.textArea = textarea}\n                defaultValue={this.state.full_url}\n              />\n            </div>\n            <div style={{\"textAlign\": \"center\"}}>\n              <button onClick={() => this.copyCodeToClipboard()}>\n                Copy to Clipboard\n              </button>\n              {\n                this.state.copySuccess ?\n                <div style={{\"color\": \"green\"}}>\n                  Success!\n                </div> : null\n              }\n            </div>\n            <QRCode value={this.state.full_url}></QRCode>  \n            {/* Render item, item price, and user assignment that is modifyable\n            should open a model to update for UI friendliness */}\n            <Grid container spacing={3}>\n              {/* Currently displaying item name and cost */}\n              <Grid item xs>\n                <Paper className={classes.paper}>\n                <div className=\"items_flex_container\">\n                <div className=\"items_line\" > Items </div>\n                <Modal\n                  style={{\"align\": \"right\"}}\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={this.state.add_item}\n                  onClose={() => this.handleClose(\"add_item\")}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                  <Fade in={this.state.add_item}>\n                    <div className={classes.paper_modal}>\n                      <TextField id=\"outlined-basic\" label=\"Item Name\" variant=\"outlined\" name=\"add_item_name\" placeholder=\"name\" onChange={this.handleChange}/>\n                      <TextField id=\"outlined-basic\" label=\"Item Cost\" variant=\"outlined\" name=\"add_item_cost\" placeholder=\"0.00\" onChange={this.handleChange} type=\"number\" step={0.01}/>\n                      <div>\n                      <Button onClick={this.handleAddItem}>Add</Button>\n                      <Button onClick={() => this.handleClose(\"add_item\")}>Cancel</Button>\n                      </div>\n                    </div>\n                  </Fade>\n                </Modal>\n                <div className=\"add_item_button\">\n                <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} size='small' display=\"inline\" onClick={() => this.handleOpen(\"add_item\", \"na\", \"na\")}>\n                  Add Item\n                </Button>\n                </div>\n                </div> \n                {/* <ul className=\"innerList\"> */}\n                {\n                  this.state.items.map((item, index) => {\n                    return (\n                      <div key={index+1}>\n                        <Modal\n                          aria-labelledby=\"transition-modal-title\"\n                          aria-describedby=\"transition-modal-description\"\n                          className={classes.modal}\n                          open={this.state.item_modal === item.item_name}\n                          onClose={() => this.handleClose(\"item_modal\")}\n                          closeAfterTransition\n                          BackdropComponent={Backdrop}\n                          BackdropProps={{\n                            timeout: 500,\n                          }}\n                        >\n                          <Fade in={this.state.item_modal === item.item_name}>\n                            <div className={classes.paper_modal}>\n                              <TextField id=\"outlined-basic\" label=\"Change Item Name\" variant=\"outlined\" name=\"new_item_name\" defaultValue={this.state.new_item_name} onChange={this.handleChange}/>\n                              <TextField id=\"outlined-basic\" label=\"Change Cost\" variant=\"outlined\" name=\"new_item_cost\" defaultValue={this.state.new_item_cost} onChange={this.handleChange} type=\"number\" step={0.01}/>\n                              <div>\n                              <Button onClick={this.handleDeleteItem}>Delete</Button>\n                              <Button onClick={() => this.handleItemEdit(item.item_cost)}>Edit</Button>\n                              <Button onClick={() => this.handleClose(\"item_modal\")}>Cancel</Button>\n                              </div>\n                            </div>\n                          </Fade>\n                        </Modal>\n\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} onClick={() => this.handleOpen(\"item_modal\", item.item_name, item.item_cost)} size='small' display=\"inline\">\n                          {item.item_name}: ${item.item_cost} \n                        </Button> \n                        <Autocomplete\n                          id=\"free-solo-demo\"\n                          freeSolo\n                          display='inline'\n                          disableClearable={true}\n                          disableCloseOnSelect={true}\n                          value={this.state.item_assignments[item.item_name]}\n                          multiple\n                          options={[]}\n                          onChange={this.handleAssign}\n                          size='small'\n                          name={item.item_name}\n                          renderInput={(params) => (\n                            <TextField {...params} label=\"user(s)\" margin=\"normal\" variant=\"outlined\" name={item.item_name}/>\n                          )}\n                        />\n                      </div>\n                    )\n                  })\n                }\n                {/* </ul> */}\n                </Paper>\n              </Grid>\n            </Grid>\n            <br></br>\n            <ColoredLine color=\"black\" />\n            <br></br>\n            {/* Render total for each individual */}\n            <Grid container spacing={3}>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  // style={{\"align\": \"right\"}}\n                  open={this.state.add_user}\n                  onClose={() => this.handleClose(\"add_user\")}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                  <Fade in={this.state.add_user}>\n                    <div className={classes.paper_modal}>\n                      <TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name=\"add_user_name\" placeholder=\"name\" onChange={this.handleChange}/>\n                      <TextField id=\"outlined-basic\" label=\"Adjusted Amount\" variant=\"outlined\" name=\"add_user_adjusted_amount\" placeholder=\"0.00\" onChange={this.handleChange} type=\"number\" step={0.01}/>\n                      <div>\n                      <Button onClick={this.handleAddUser}>Add</Button>\n                      <Button onClick={() => this.handleClose(\"add_user\")}>Cancel</Button>\n                      </div>\n                    </div>\n                  </Fade>\n                </Modal>\n                <div className=\"add_user_button\">\n                <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} size='small'  display=\"inline\"  onClick={() => this.handleOpen(\"add_user\", \"na\", \"na\")}>\n                  Add User\n                </Button>\n                </div>\n            {\n              this.state.users.map((user, index) => {\n                return (\n                  <Grid item xs key={index+1}>\n                    <Modal\n                      aria-labelledby=\"transition-modal-title\"\n                      aria-describedby=\"transition-modal-description\"\n                      className={classes.modal}\n                      open={this.state.user_modal === user.user_nickname}\n                      onClose={() => this.handleClose(\"user_modal\")}\n                      closeAfterTransition\n                      BackdropComponent={Backdrop}\n                      BackdropProps={{\n                        timeout: 500,\n                      }}\n                    >\n                      <Fade in={this.state.user_modal === user.user_nickname}>\n                        <div className={classes.paper_modal}>\n                            <TextField id=\"outlined-basic\" label=\"Change User Name\" variant=\"outlined\" name=\"new_nickname\" defaultValue={this.state.new_nickname} onChange={this.handleChange}/>\n                            <TextField id=\"outlined-basic\" label=\"Change Adjustment\" variant=\"outlined\" name=\"new_adjusted_amount\" defaultValue={this.state.new_adjusted_amount} onChange={this.handleChange} type=\"number\" step={0.01}/>\n                            <div>\n                            <Button onClick={this.handleDeleteUser}>Delete</Button>\n                            <Button onClick={() => this.handleUserEdit(user.user_adjusted_amount)}>Edit</Button>\n                            <Button onClick={() => this.handleClose(\"user_modal\")}>Cancel</Button>\n                            </div>\n                        </div>\n                      </Fade>\n                    </Modal>\n                    <Paper className={classes.paper}>\n                      <div style={{\n                          \"display\": \"flex\",\n                          \"justifyContent\": \"center\",\n                          \"alignItems\": \"center\",\n                        }}>\n                        <Button onClick={() => this.handleOpen(\"user_modal\", user.user_nickname, user.user_adjusted_amount)}>{user.user_nickname}</Button>\n                      </div>\n                      <div className=\"innerList\">\n                        {\n                          // check if the user_adjusted_amount exists\n                          this.state.user_assignments === undefined\n                          ?\n                            <div style={{\"textAlign\": \"center\"}}>\n                            no assignments\n                            </div>\n                          : (\n                            // check if the user array is empty\n                            this.state.user_assignments[user.user_nickname].length === 0\n                            ?\n                              <div>\n                                <div style={{\"textAlign\": \"center\"}}> no assignments </div>\n                                <div style={{\"textAlign\": \"center\"}}> adjustments: {user.user_adjusted_amount.toFixed(2)} </div>\n                              </div>\n                            : (\n                              <div style={{\"textAlign\": \"center\"}}> \n                                { \n                                  this.state.user_assignments[user.user_nickname].map((item, index2) => {\n                                    return (\n                                      <div key={index2+1} style={{\"textAlign\": \"center\"}}>\n                                        {item}\n                                      </div>\n                                    )\n                                  })\n                                }\n                                <br/>\n                                <div>\n                                total: {user.user_amount_owed.toFixed(2)} \n                                <br/>\n                                adjustments: {user.user_adjusted_amount.toFixed(2)}\n                                </div>\n                              </div>\n                            )\n                          )\n                        }\n                      </div>\n                    </Paper>\n                  </Grid>\n                )\n              })\n            }\n            </Grid>\n            {/* Render group total */}\n            <Grid container spacing={3}>\n              <Grid item xs>\n                <Paper className={classes.paper}>\n                  {/* Grand Total */}\n                  {/* <ul className=\"innerList\"> */}\n                  {\n                    this.state.edit_tip\n                    ?\n                    <div style={{\"textAlign\": \"center\"}}>\n                      <TextField id=\"outlined-basic\" label=\"Tip\" variant=\"outlined\" name=\"new_tip_rate\" onChange={this.handleChange} defaultValue={this.state.new_tip_rate} type=\"number\"/>\n                      <Button onClick={this.handleTip}>Submit</Button>\n                      <Button onClick={() => this.handleClose(\"edit_tip\")}>Cancel</Button>\n                    </div>\n                    :\n                    <div className=\"edit_flex_container\">\n                      <div>Tip Rate: {this.state.tip_rate}%</div>\n                      <Button variant=\"outlined\" color=\"primary\" className={classes.item_button} size='small' display=\"inline\" onClick={() => this.handleOpen(\"edit_tip\")}>Edit Tip</Button>\n                      </div>\n                  }\n                    <div style={{\"textAlign\": \"center\"}}>Tax Rate: {\n                      this.state.tax_rate === 0\n                      ? 0\n                      : (this.state.tax_rate-1).toFixed(6) * 100\n                    }% </div>\n                    <div style={{\"textAlign\": \"center\"}}>SubTotal: ${this.state.sub_total.toFixed(2)}</div>\n                    <div style={{\"textAlign\": \"center\"}}>Grand Total: ${this.state.total_cost.toFixed(2)}</div>\n                    <div style={{\"textAlign\": \"center\"}}>Net Adjustments: ${this.state.total_adjustment.toFixed(2)}</div>\n                  {/* </ul> */}\n                  {\n                    this.state.image_url.length > 0\n                    ?\n                      this.state.show_image \n                      ? \n                        <div>\n                          <Button onClick={this.handleImage}>Hide</Button>\n                          <img style={{width: 225}} src={this.state.image_url} alt={\"None\"}/>\n                        </div>\n                      :\n                        <Button onClick={this.handleImage}>Show</Button>\n                    :\n                  <p>No Receipt Uploaded</p>\n                  }\n                  <Form className=\"form\" onSubmit={this.handleReupload}>\n                    <div>\n                      <input type=\"file\" name=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImagePreview}/>\n                      <br></br>\n                      <img style={{width: 225}} src={this.state.preview} alt={\"\"}/>\n                    </div>\n                    <Button type='submit'>New Upload</Button>\n                  </Form>\n                </Paper>\n              </Grid>\n            </Grid>  \n            <br></br>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\n// use styles for Material UI with react class component\nexport default withStyles(styles, { withTheme: true })(SplitBillPage);\n","import React from 'react';\nimport MainPage from './components/main_page/MainPage';\nimport CreateGroup from './components/create_group/CreateGroup'\nimport JoinGroup from './components/join_group/JoinGroup'\n// import SplitBill from './components/split_bill/SplitBill'\nimport { Route, Switch } from 'react-router-dom';\nimport SplitBillPage from './components/split_bill_page/SplitBillPage'\n\nfunction App() {\n  const MainPageComponent = () => <MainPage/>\n  const CreateGroupComponent = () => <CreateGroup/>\n  const JoinGroupComponent = () => <JoinGroup/>\n  // const SplitBillComponent = () => <SplitBill/>\n  // in react router to access the url we need to pass in a prop which will automatically contain the URL\n  // other approach is use vanilla js in component and use \"window.location.href\"\n  const SplitBillPageComponent = (group_url) => <SplitBillPage groupURL={group_url}/>\n\n  return (\n    <div className=\"App\">\n      <Switch> \n        <Route exact path=\"/\" render={MainPageComponent}/>\n        <Route exact path=\"/create_group\" component={CreateGroupComponent} />\n        <Route exact path=\"/join_group\" component={JoinGroupComponent} />\n        <Route exact path=\"/split_bill\" component={MainPageComponent} />\n        <Route path = '/split_bill/:groupURL' component={SplitBillPageComponent}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * BrowserRouter is a version of react routing in order to match the\n * UI(User Interface) with the URL selected.\n * So it basically is one of many approaches \n * to ensure what we see on the webpage matches the link we are at.\n * in other words\n * This provides the routing ability to change the URL to the \n * appropriate link such that additional features can be loaded\n * in for our SPA(Single Page Application). It allowes the user to move backwards and\n * forwards in the webpage. Also provides deeplinking\n * where hyperlinks lead to a specific content instead of a \n * general home page.\n * \n * https://stackoverflow.com/questions/53065686/why-do-we-use-browserrouter-in-react\n */\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}